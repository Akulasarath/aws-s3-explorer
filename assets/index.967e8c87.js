import{r as e,o as t,a as o,c as n,b as l,w as i,v as s,u as r,d as a,e as c,p as d,f as u,t as g,g as p,h as f,i as b}from"./vendor.afdb6727.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const h=()=>{};h.toString=()=>`[DEBUG ${(new Date).toString()}]`,console.log.bind(console,"%s",h);const y=e({delimiter:"/",currentBucket:null,prefix:"/",view_prefix:"/"}),m={class:"modal-dialog"},v={class:"modal-content"},w={name:"settings_form"},S=l("div",{class:"modal-header"},[l("h4",{class:"modal-title"},"S3 Explorer: Settings")],-1),k={class:"modal-body"},C={class:"col-md-18"},x=l("h2",null,"Welcome to the AWS S3 Explorer",-1),_={class:"",style:{width:"100%"}},A=l("div",null," Specify the Cognito User Pool login url and clientId ",-1),I={style:{display:"flex","flex-direction":"row","justify-content":"space-around"}},U=["disabled"],j=[l("i",{class:"fas fa-sign-in-alt"},null,-1),c(" Login")],L=a("<hr><div> Or setup up a cognito pool and configure the explorer. <ol><li> Cognito User Pool: <ul><li>Create a User Pool in any region (Not an identity pool)</li><li>Since we will use SSO, most of the configuration is irrelevant</li><li><strong>General settings &gt; App clients</strong> &gt; Add the S3 Console as an app</li><li><strong>Federation &gt; Identity providers</strong> &gt; Add your SSO provider of choice to the OAuth settings</li><li><strong>App Integration &gt; App client settings</strong> &gt; Enable identity provider just created</li><li>Specify <strong>https://rhosys.github.io/aws-s3-explorer/</strong> as the callback and logout urls</li><li>Specify <strong>Authorization code grant</strong> flow and enable All <strong>Allowed OAuth Scopes</strong></li><li><strong>App Integration &gt; Domain name</strong> &gt; Configure the setup for a domain (either Cognito or your own custom one.</li></ul></li><li>Return here and enter the Cognito User Pool ID</li></ol></div>",2),$={setup(a){const c=e({region:null,cognitoLoginUrl:null,cognitoClientId:null}),d=async e=>await crypto.subtle.digest("SHA-256",(new TextEncoder).encode(e)),u=async()=>{const e=await d(crypto.getRandomValues(new Uint32Array(4)).toString());return Array.from(new Uint8Array(e)).map((e=>e.toString(16).padStart(2,"0"))).join("")},g=new URL(location).searchParams,p=async()=>{if(y.user)return;if(null!==g.get("code")){window.history.replaceState({},document.title,"/");const e=g.get("state"),t=sessionStorage.getItem(`codeVerifier-${e}`);if(sessionStorage.removeItem(`codeVerifier-${e}`),null===t)throw new Error("Unexpected code");const o=await fetch(`${c.cognitoLoginUrl}/oauth2/token`,{method:"POST",headers:new Headers({"content-type":"application/x-www-form-urlencoded"}),body:Object.entries({grant_type:"authorization_code",client_id:cognitoClientId,code:g.get("code"),code_verifier:t,redirect_uri:window.location.origin}).map((([e,t])=>`${e}=${t}`)).join("&")});if(!o.ok)throw new Error(await o.json());const n=await o.json();return void localStorage.setItem("tokens",JSON.stringify(n))}const e=await u(),t=await u();sessionStorage.setItem(`codeVerifier-${e}`,t);const o=(n=await d(t),btoa(String.fromCharCode.apply(null,new Uint8Array(n))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""));var n;window.location=`${c.cognitoLoginUrl}/login?response_type=code&client_id=${c.cognitoClientId}&state=${e}&code_challenge_method=S256&code_challenge=${o}&redirect_uri=${window.location.origin}`};return t((()=>p())),(e,t)=>(o(),n("div",null,[l("div",m,[l("div",v,[l("form",w,[l("div",null,[S,l("div",k,[l("div",C,[x,l("div",_,[A,l("div",I,[i(l("input",{name:"Cognito Login Domain URL","onUpdate:modelValue":t[0]||(t[0]=e=>r(c).cognitoLoginUrl=e),type:"text",class:"form-control",placeholder:"https://domain.auth.eu-west-1.amazoncognito.com",required:"true",style:{"margin-right":"1rem"}},null,512),[[s,r(c).cognitoLoginUrl]]),i(l("input",{name:"Cognito Client ID","onUpdate:modelValue":t[1]||(t[1]=e=>r(c).cognitoClientId=e),type:"text",class:"form-control",placeholder:"4altof0dlefqqicdifb8tv4mjp",required:"true",style:{"margin-right":"1rem"}},null,512),[[s,r(c).cognitoClientId]]),l("button",{type:"submit",class:"btn btn-primary",disabled:!r(c).cognitoLoginUrl||!r(c).cognitoClientId,onClick:p},j,8,U)]),L])])])])])])])]))}};d("data-v-2fbb6a56");const O={class:""},E={class:"col-12"},D={class:"panel panel-primary dropzone"},P={class:"panel-heading clearfix"},V={class:"btn-group pull-left"},N=l("div",{class:"title pull-left"},"AWS S3 Explorer",-1),R={key:0,class:"pull-right"},q={id:"breadcrumb",class:"breadcrumb pull-right"},z={class:"active"},W={href:"#"},T={id:"navbuttons",class:"pull-right"},B={class:"btn-group"},F=l("span",{id:"bucket-plus",style:{cursor:"pointer"},class:"btn fa fa-folder-plus fa-2x",title:"New folder"},null,-1),G=["disabled"],H={key:0,class:"btn-group"},M={id:"badgecount",style:{cursor:"default"},class:"btn badge pull-right",title:"Object count"},J={key:1,class:"btn-group"},K={id:"badgecount",style:{cursor:"default"},class:"btn badge pull-right",title:"Selected object count"},Q=l("div",{class:"panel-body"},[l("table",{class:"table table-bordered table-hover table-striped",style:{width:"100%"},id:"s3objects-table"},[l("thead",null,[l("tr",null,[l("th",{class:"text-center"},"Select"),l("th",null,"Object"),l("th",null,"Folder"),l("th",null,"Last Modified"),l("th",null,"Timestamp"),l("th",null,"Class"),l("th",null,"Size")])]),l("tbody",{id:"s3objects-tbody"})])],-1),X={class:"col-12"};u();const Y={props:{msg:String},setup(i){const s=e({objectCount:0,keys_selected:[],showSettings:!0});t((()=>{console.log("****"),y.user}));return(e,t)=>(o(),n("div",O,[l("div",E,[l("div",D,[l("div",P,[l("div",V,[N,r(y).bucket?(o(),n("div",R,[l("ul",q,[l("li",z,[l("a",W,g(r(y).bucket),1)])])])):p("",!0)]),l("div",T,[l("div",null,[l("div",B,[F,l("span",{id:"bucket-upload",style:{cursor:"pointer"},class:"btn fa fa-cloud-upload-alt fa-2x",onClick:t[0]||(t[0]=e=>{console.log("**** upload")}),title:"Upload files"}),l("span",{id:"bucket-trash",style:{cursor:"pointer"},class:"btn fa fa-trash-alt fa-2x",title:"Delete {{state.keys_selected.length}} selected object(s)",disabled:!r(s).keys_selected.length,onClick:t[1]||(t[1]=t=>e.trash())},null,8,G),l("span",{id:"bucket-info",style:{cursor:"pointer"},class:"btn fa fa-info-circle fa-2x",onClick:t[2]||(t[2]=t=>e.openInfo()),title:"Info"}),l("span",{id:"bucket-loader",style:{cursor:"pointer"},class:"btn fa fa-sync fa-2x",onClick:t[3]||(t[3]=e=>{console.log("*** Refresh")}),title:"Refresh"}),l("span",{id:"bucket-settings",style:{cursor:"pointer"},class:"btn fa fa-cog fa-2x",onClick:t[4]||(t[4]=t=>e.openSettings()),title:"Settings"})]),0===r(s).keys_selected.length?(o(),n("div",H,[l("span",M,g(r(s).objectCount),1)])):p("",!0),r(s).keys_selected.length>0?(o(),n("div",J,[l("span",K,g(r(s).keys_selected.length)+" of "+g(r(s).objectCount),1)])):p("",!0)])])]),Q])]),l("div",X,[r(s).showSettings?(o(),f($,{key:0})):p("",!0)])]))},__scopeId:"data-v-2fbb6a56"};b({setup:e=>(e,t)=>(o(),f(Y))}).mount("#app"),AWS.config.update({region:""}),AWS.config.update({signatureVersion:"v4"});
